server.port=8085
# Gives us access to the H2 database web console
spring.h2.console.enabled=true
# Generates the database *only* if it's not there yet
spring.jpa.hibernate.ddl-auto=update
# Creates the database in a file
spring.datasource.url=jdbc:h2:file:~/organization-app;
DB_CLOSE_ON_EXIT=FALSE;
# For educational purposes we will show the SQL in console
spring.jpa.properties.hibernate.show_sql=true

#ssl config
server.ssl.enabled=true
server.ssl.protocol=TLS
server.ssl.key-alias=employee
server.ssl.key-store=/Users/itspa/IdeaProjects/SpringBootApp/src/main/resources/employee.p12
server.ssl.key-store-type=pkcs12
server.ssl.key-password=secret
server.ssl.key-store-password=secret

#Truststore
#server.ssl.trust-store=store-path
#server.ssl.trust-store-type=JKS
#server.ssl.trust-store-provider=provider
#server.ssl.trust-store-password=some-password

#AccessLogs
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.directory=logs
server.tomcat.accesslog.file-date-format=yyyy-MM-dd
server.tomcat.accesslog.prefix=access_log
server.tomcat.accesslog.suffix=.log
server.tomcat.accesslog.rotate=true

#Internal logs
logging.level.org.apache.tomcat=INFO
logging.level.org.apache.catalina=INFO
#logging.filepath=
#logging.console.only=

#Spring threads properties
#Whether core threads are allowed to time out. This enables dynamic growing and shrinking of the pool.
#spring.task.execution.pool.allow-core-thread-timeout=
#Core number of threads.
#spring.task.execution.pool.core-size=
#Time limit for which threads may remain idle before being terminated.
#spring.task.execution.pool.keep-alive=
#Maximum allowed number of threads. If tasks are filling up the queue, the pool can expand up to that size to accommodate the load. Ignored if the queue is unbounded.
#spring.task.execution.pool.max-size=
#Queue capacity. An unbounded capacity does not increase the pool and therefore ignores the "max-size" property.
#spring.task.execution.pool.queue-capacity=
#Whether the executor should wait for scheduled tasks to complete on shutdown.
#spring.task.execution.shutdown.await-termination=
#Maximum time the executor should wait for remaining tasks to complete.
#spring.task.execution.shutdown.await-termination-period=
#Prefix to use for the names of newly created threads.
#spring.task.execution.thread-name-prefix=task-
#Maximum allowed number of threads.
#spring.task.scheduling.pool.size=1
#Whether the executor should wait for scheduled tasks to complete on shutdown.
#spring.task.scheduling.shutdown.await-termination=false
#Maximum time the executor should wait for remaining tasks to complete.
#spring.task.scheduling.shutdown.await-termination-period=

#spring.task.scheduling.thread-name-prefix=

#Thread Pool and Http Pool config
#Infinite time to wait for another HTTP request before closing the connection
server.connection.timeout=1000
#allow thread pooling by client using keep-alive http connection
server.tomcat.keep-alive-timeout=1000
server.tomcat.accept-count=100
server.tomcat.max-connections=500
server.tomcat.max-threads=100
server.tomcat.min-spare-threads=20
#server.tomcat.max-swallow-size=
#server.tomcat.max-http-post-size=

#keycloak config
keycloak.realm = TestRealm
keycloak.auth-server-url = http://localhost:8080/auth
keycloak.ssl-required = external
keycloak.resource = spring-boot-app-client
keycloak.credentials.secret = 9f2473a1-c4cc-476a-8dee-e399c3b19be6
keycloak.use-resource-role-mappings = true
keycloak.public-client=false
keycloak.policy-enforcer-config.enforcement-mode=ENFORCING
#keycloak.policy-enforcer-config.lazy-load-paths=true
#keycloak.cors=true
#keycloak.enabled = false (for tests only)
keycloak.securityConstraints[0].authRoles[0] = spring-boot-app-account-role
keycloak.securityConstraints[0].authRoles[1] = spring-boot-app-admin-role
keycloak.securityConstraints[0].securityCollections[0].name = protected
keycloak.securityConstraints[0].securityCollections[0].patterns[0] = /*
#############################
#Enabling SSL/HTTPS for the Keycloak Server - on keycloak server
#To configure a Policy Enforcer, unlike keycloak.json, policy-enforcer-config must be used instead of just policy-enforcer.
#############################


#keycloak.securityConstraints[0].authRoles[0] = admin
#keycloak.securityConstraints[0].authRoles[1] = user
#keycloak.securityConstraints[0].securityCollections[0].name = insecure stuff
#keycloak.securityConstraints[0].securityCollections[0].patterns[0] = /insecure

#keycloak.securityConstraints[1].authRoles[0] = admin
#keycloak.securityConstraints[1].securityCollections[0].name = admin stuff
#keycloak.securityConstraints[1].securityCollections[0].patterns[0] = /admin
